[pytest]
# Basic test configuration
addopts =
    -v
    --html=/app/test-results/report.html
    --self-contained-html
    --capture=tee-sys  # Capture stdout/stderr while still showing output
    --tb=short  # Shorter traceback format
    --strict-markers  # Ensure all markers are registered
    --durations=10  # Show 10 slowest tests

# Test discovery
testpaths = tests/ui
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = /app/test-results/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_file_date_format = %Y-%m-%d %H:%M:%S

# Markers
markers =
    regression: Run the regression tests.
    sanity: Run the sanity tests.
    asyncio: Mark test as asyncio-based.
    slow: Mark tests that typically take longer than 30 seconds.
    flaky: Mark tests that are known to be unstable.

# Asyncio configuration
asyncio_mode = auto

# Performance and warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::selenium.common.exceptions.WebDriverException

# Timeout settings
timeout = 300
timeout_method = thread

# Retry configuration for flaky tests
retries = 2
retry_delay = 1

# Additional pytest configuration
console_output_style = count
max_fail = 5  # Stop after 5 failures