name: Selenium Grid Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'sanity'
        type: choice
        options:
          - sanity
          - regression
          - all

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt

    - name: Setup infrastructure
      run: |
        echo "Creating Docker network..."
        docker network create grid || true
        
        echo "Starting Selenium Grid..."
        docker-compose up -d
        
        echo "Waiting for Grid to be ready..."
        sleep 15
        
        echo "Grid status:"
        curl -s http://localhost:4444/wd/hub/status || true
        
        echo "Docker containers:"
        docker ps -a

    - name: Run tests
      env:
        PYTHONPATH: ${GITHUB_WORKSPACE}
      run: |
        # Echo current directory and its contents
        pwd
        ls -la
        
        # Run pytest with appropriate markers
        if [ "${{ github.event.inputs.test_suite }}" = "sanity" ]; then
          python -m pytest -v -m "sanity" --capture=no tests/ui/ --html=test-results/report.html
        elif [ "${{ github.event.inputs.test_suite }}" = "regression" ]; then
          python -m pytest -v -m "regression" --capture=no tests/ui/ --html=test-results/report.html
        else
          python -m pytest -v --capture=no tests/ui/ --html=test-results/report.html
        fi

    - name: Collect test logs
      if: always()
      run: |
        echo "Container logs:"
        docker-compose logs > test-results/docker.log
        
        echo "Test directory contents:"
        ls -R test-results/

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          test-results/

    - name: Cleanup
      if: always()
      run: |
        docker-compose down
        docker network rm grid || true